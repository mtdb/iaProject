/*
 * using utils.js
 * using models/Worldmap.js
 * using models/Ant.js
 */

var world = new Worldmap();
world.generate(36,24);
world.populate(12);

var ant = new Ant();
ant.goIn(world);

var paper;

function fill(x,y,desc){
    cx = 20*x;
    cy = 20*y;
    switch (desc){
    case "empty":
        paper.rect(cx, cy, 20, 20).attr({fill: "#fff", stroke: "none"});
        break;
    case "groundA":
        paper.rect(cx, cy, 20, 20).attr({fill: "#B18904", stroke: "none"});
        break;
    case "groundB":
        paper.rect(cx, cy, 20, 20).attr({fill: "#886A08", stroke: "none"});
        break;
    case "groundC":
        paper.rect(cx, cy, 20, 20).attr({fill: "#5F4C0B", stroke: "none"});
        break;
    case "food":
        paper.rect(cx, cy, 20, 20).attr({fill: "#fff", stroke: "none"});
        paper.circle(cx+10, cy+10, 5).attr({fill: "blue"});
        break;
    case "ant":
        paper.rect(cx, cy, 20, 20).attr({fill: "#fff", stroke: "none"});
        paper.circle(cx, cy, 5).attr({fill: "black"});
        break;
    }
    
}

function put(x,y){
    cx = 10+20*(x-1);
    cy = 10+20*(y-1);
    (new Function("paper", "window", "document", "ant.animate(Raphael.animation({cx: "+cx+", cy: "+cy+"}, 2e3).delay(1));")).call(paper, paper);
}

window.onload = function () {
    var btn = $("#run"),
        cd = $("#code");
    paper = Raphael("canvas", 640, 480);
    paper.clear();
    
    for (i=0; i<36; i++){
        for (j=0; j<24; j++){
            if      (world.ground[i][j] == 0) fill(i,j,"empty");
            else if (world.ground[i][j] == 1) fill(i,j,"groundA");
            else if (world.ground[i][j] == 2) fill(i,j,"groundB");
            else if (world.ground[i][j] == 3) fill(i,j,"groundC");
            else if (world.ground[i][j] == 4) fill(i,j,"food");
            else if (world.ground[i][j] == 5) fill(i,j,"ant");
        }
    }
    
    btn.click(function () {
        try {
            eval(cd.val());
        } catch (e) {
            alert(e.message || e);
        }
    });
    
    /*btn.click(function () {
        try {
            (new Function("paper", "window", "document", cd.val())).call(paper, paper);
        } catch (e) {
            alert(e.message || e);
        }
    });*/
};

